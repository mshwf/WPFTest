<Window x:Class="WPFTest.RotatingCubeExample"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WPFTest"
        mc:Ignorable="d"
        Title="RotatingCubeExample" Height="300" Width="300">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Viewbox>
            <Canvas Width="321" Height="201">

                <!-- The Viewport3D provides a rendering surface for 3-D visual content. -->
                <Viewport3D Name="MyAnimatedObject"
          ClipToBounds="True" Width="200" Height="150"
          Canvas.Left="0" Canvas.Top="10">

                    <!-- Defines the camera used to view the 3D object. -->
                    <Viewport3D.Camera>
                        <PerspectiveCamera x:Name="myPerspectiveCamera" Position="0,0,1.8" LookDirection="0,0,-1" 
             FieldOfView="60" />
                    </Viewport3D.Camera>

                    <!-- The ModelVisual3D children contain the 3D models -->
                    <Viewport3D.Children>

                        <!-- Two ModelVisual3D define the lights cast in the scene. Without light, the
                 3D object cannot be seen. Also, the direction of the lights affect shadowing. -->
                        <ModelVisual3D>
                            <ModelVisual3D.Content>
                                <AmbientLight Color="Red"/>
                            </ModelVisual3D.Content>
                        </ModelVisual3D>
                        <ModelVisual3D>
                            <ModelVisual3D.Content>
                                <DirectionalLight Color="#FFFFFF" Direction="-0.612372,-0.5,-0.612372" />
                            </ModelVisual3D.Content>
                        </ModelVisual3D>
                        <ModelVisual3D>
                            <ModelVisual3D.Content>
                                <DirectionalLight Color="#FFFFFF" Direction="0.612372,-0.5,-0.612372" />
                            </ModelVisual3D.Content>
                        </ModelVisual3D>
                        <ModelVisual3D>
                            <ModelVisual3D.Content>
                                <GeometryModel3D>

                                    <!-- The geometry specifes the shape of the 3D plane. In this case, a flat sheet is created. -->
                                    <GeometryModel3D.Geometry>
                                        <MeshGeometry3D 
                     TriangleIndices="0,1,2,3,4,5"
                     Normals="0,0,1 0,0,1 0,0,1 0,0,1 0,0,1 0,0,1 "
                     TextureCoordinates="0,0 1,0 1,1 1,1 0,1 0,0 "
                     Positions="-0.5,-0.5,0.5 0.5,-0.5,0.5 0.5,0.5,0.5 0.5,0.5,0.5 -0.5,0.5,0.5 -0.5,-0.5,0.5 " />
                                    </GeometryModel3D.Geometry>

                                    <!-- The material specifies the material applied to the plane. In this case it is a linear gradient.-->
                                    <GeometryModel3D.Material>
                                        <MaterialGroup>
                                            <DiffuseMaterial Brush="White"/>
                                        </MaterialGroup>
                                    </GeometryModel3D.Material>

                                    <!-- The Transform specifies how to transform the 3D object. The properties of the
                        Rotation object are animated causing the 3D object to rotate and "wobble" (see Storyboard below).-->
                                    <GeometryModel3D.Transform>
                                        <RotateTransform3D x:Name="myRotateTransform3D" >
                                            <RotateTransform3D.Rotation>
                                                <AxisAngleRotation3D Axis="0,3,0" Angle="40" />
                                            </RotateTransform3D.Rotation>
                                        </RotateTransform3D>
                                    </GeometryModel3D.Transform>
                                </GeometryModel3D>
                            </ModelVisual3D.Content>
                        </ModelVisual3D>
                    </Viewport3D.Children>

                    <!-- Trigger the rotation animation when the 3D object loads. -->
                    <Viewport3D.Triggers>
                        <EventTrigger RoutedEvent="Viewport3D.Loaded">
                            <BeginStoryboard>
                                <Storyboard>

                                    <!-- This animation animates the Rotation property of the RotateTransform
                       causing the 3D shape to rotate and wobble as the rotation angle and 
                       axis are animated. -->
                                    <Rotation3DAnimation
                   Storyboard.TargetName="myRotateTransform3D" 
                   Storyboard.TargetProperty="Rotation" 
                   AutoReverse="True"  RepeatBehavior="Forever">
                                        <Rotation3DAnimation.From>
                                            <AxisAngleRotation3D Axis="0,3,0" Angle="-60" />
                                        </Rotation3DAnimation.From>
                                        <Rotation3DAnimation.To>
                                            <AxisAngleRotation3D Axis="1,0,1" Angle="60" />
                                        </Rotation3DAnimation.To>
                                    </Rotation3DAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Viewport3D.Triggers>
                </Viewport3D>
            </Canvas>
        </Viewbox>

        <Viewbox Grid.Column="1">
            <Canvas Width="321" Height="201">
                <Viewport3D Name="MyAnimatedObject1"
          ClipToBounds="True" Width="150" Height="150"
          Canvas.Left="0" Canvas.Top="10">

                    <Viewport3D.Camera>
                        <!-- LookDirection="0,0,-1" -->
                        <PerspectiveCamera x:Name="myPerspectiveCamera1" Position="0,0,1.8" LookDirection="0,0,-1"
             FieldOfView="-50" />
                    </Viewport3D.Camera>
                    <Viewport3D.Children>

                        <ModelVisual3D>
                            <ModelVisual3D.Content>
                                <DirectionalLight Color="#FFFFFF" Direction="-0.612372,-0.5,-0.612372" />
                            </ModelVisual3D.Content>
                        </ModelVisual3D>
                        <ModelVisual3D>
                            <ModelVisual3D.Content>
                                <DirectionalLight Color="#FFFFFF" Direction="0.612372,-0.5,-0.612372" />
                            </ModelVisual3D.Content>
                        </ModelVisual3D>
                        <ModelVisual3D>
                            <ModelVisual3D.Content>
                                <GeometryModel3D>

                                    <GeometryModel3D.Geometry>
                                        <MeshGeometry3D 
                     TriangleIndices="0,1,2,3,4,5"
                     Normals="0,0,1 0,0,1 0,0,1 0,0,1 0,0,1 0,0,1 "
                     TextureCoordinates="0,0 1,0 1,1 1,1 0,1 0,0 "
                     Positions="-0.5,-0.5,0.5 0.5,-0.5,0.5 0.5,0.5,0.5 0.5,0.5,0.5 -0.5,0.5,0.5 -0.5,-0.5,0.5 " />
                                    </GeometryModel3D.Geometry>

                                    <GeometryModel3D.Material>
                                        <MaterialGroup>
                                            <DiffuseMaterial Brush="White"/>
                                        </MaterialGroup>
                                    </GeometryModel3D.Material>

                                    <GeometryModel3D.Transform>
                                        <RotateTransform3D x:Name="myRotateTransform3D1" >
                                            <RotateTransform3D.Rotation>
                                                <AxisAngleRotation3D Axis="0,3,0" Angle="40" />
                                            </RotateTransform3D.Rotation>
                                        </RotateTransform3D>
                                    </GeometryModel3D.Transform>
                                </GeometryModel3D>
                            </ModelVisual3D.Content>
                        </ModelVisual3D>
                    </Viewport3D.Children>

                    <Viewport3D.Triggers>
                        <EventTrigger RoutedEvent="Viewport3D.Loaded">
                            <BeginStoryboard>
                                <Storyboard>

                                    <Rotation3DAnimation
                   Storyboard.TargetName="myRotateTransform3D1" 
                   Storyboard.TargetProperty="Rotation" 
                   AutoReverse="True"  RepeatBehavior="Forever">
                                        <Rotation3DAnimation.From>
                                            <AxisAngleRotation3D Axis="0,3,0" Angle="-60" />
                                        </Rotation3DAnimation.From>
                                        <Rotation3DAnimation.To>
                                            <AxisAngleRotation3D Axis="1,0,1" Angle="60" />
                                        </Rotation3DAnimation.To>
                                    </Rotation3DAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Viewport3D.Triggers>
                </Viewport3D>
            </Canvas>
        </Viewbox>
    </Grid>
</Window>
